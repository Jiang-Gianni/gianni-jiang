// Code generated by qtc from "doc.md". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line docgen/doc.md:1
package docgen

//line docgen/doc.md:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line docgen/doc.md:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line docgen/doc.md:1
func StreamDocTemplate(qw422016 *qt422016.Writer, title string, description string,
	rMap map[string]struct {
		Handlers    map[string]string
		MiddleWares []string
	}, sortedRoutes []string, functionMap map[string]struct {
		File string
		Line int
	}) {
//line docgen/doc.md:7
	qw422016.N().S(`
# **`)
//line docgen/doc.md:8
	qw422016.N().S(title)
//line docgen/doc.md:8
	qw422016.N().S(`**

`)
//line docgen/doc.md:10
	qw422016.N().S(description)
//line docgen/doc.md:10
	qw422016.N().S(`


## **Routes**

`)
//line docgen/doc.md:15
	for _, pattern := range sortedRoutes {
//line docgen/doc.md:15
		qw422016.N().S(`
`)
//line docgen/doc.md:16
		funcMap := rMap[pattern]

//line docgen/doc.md:16
		qw422016.N().S(`
### **`)
//line docgen/doc.md:17
		qw422016.E().S(pattern)
//line docgen/doc.md:17
		qw422016.N().S(`**
`)
//line docgen/doc.md:18
		if len(funcMap.MiddleWares) > 0 {
//line docgen/doc.md:18
			qw422016.N().S(`
#### **MIDDLEWARES**
`)
//line docgen/doc.md:20
		}
//line docgen/doc.md:20
		qw422016.N().S(`
    `)
//line docgen/doc.md:21
		for _, mw := range funcMap.MiddleWares {
//line docgen/doc.md:21
			qw422016.N().S(`
* [_`)
//line docgen/doc.md:22
			qw422016.E().S(mw)
//line docgen/doc.md:22
			qw422016.N().S(`_](`)
//line docgen/doc.md:22
			qw422016.E().S(functionMap[mw].File)
//line docgen/doc.md:22
			qw422016.N().S(`#L`)
//line docgen/doc.md:22
			qw422016.E().V(functionMap[mw].Line)
//line docgen/doc.md:22
			qw422016.N().S(`)`)
//line docgen/doc.md:22
		}
//line docgen/doc.md:22
		qw422016.N().S(`

`)
//line docgen/doc.md:24
		for verb, f := range funcMap.Handlers {
//line docgen/doc.md:24
			qw422016.N().S(`
#### **`)
//line docgen/doc.md:25
			qw422016.E().S(verb)
//line docgen/doc.md:25
			qw422016.N().S(`**
* [_`)
//line docgen/doc.md:26
			qw422016.E().S(f)
//line docgen/doc.md:26
			qw422016.N().S(`_](`)
//line docgen/doc.md:26
			qw422016.E().S(functionMap[f].File)
//line docgen/doc.md:26
			qw422016.N().S(`#L`)
//line docgen/doc.md:26
			qw422016.E().V(functionMap[f].Line)
//line docgen/doc.md:26
			qw422016.N().S(`)
`)
//line docgen/doc.md:27
		}
//line docgen/doc.md:27
		qw422016.N().S(`

<br>
<br>

`)
//line docgen/doc.md:32
	}
//line docgen/doc.md:32
	qw422016.N().S(`

`)
//line docgen/doc.md:34
}

//line docgen/doc.md:34
func WriteDocTemplate(qq422016 qtio422016.Writer, title string, description string,
	rMap map[string]struct {
		Handlers    map[string]string
		MiddleWares []string
	}, sortedRoutes []string, functionMap map[string]struct {
		File string
		Line int
	}) {
//line docgen/doc.md:34
	qw422016 := qt422016.AcquireWriter(qq422016)
//line docgen/doc.md:34
	StreamDocTemplate(qw422016, title, description, rMap, sortedRoutes, functionMap)
//line docgen/doc.md:34
	qt422016.ReleaseWriter(qw422016)
//line docgen/doc.md:34
}

//line docgen/doc.md:34
func DocTemplate(title string, description string,
	rMap map[string]struct {
		Handlers    map[string]string
		MiddleWares []string
	}, sortedRoutes []string, functionMap map[string]struct {
		File string
		Line int
	}) string {
//line docgen/doc.md:34
	qb422016 := qt422016.AcquireByteBuffer()
//line docgen/doc.md:34
	WriteDocTemplate(qb422016, title, description, rMap, sortedRoutes, functionMap)
//line docgen/doc.md:34
	qs422016 := string(qb422016.B)
//line docgen/doc.md:34
	qt422016.ReleaseByteBuffer(qb422016)
//line docgen/doc.md:34
	return qs422016
//line docgen/doc.md:34
}
