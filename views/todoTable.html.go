// Code generated by qtc from "todoTable.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/todoTable.html:1
package views

//line views/todoTable.html:1
import "github.com/Jiang-Gianni/gianni-jiang/db"

//line views/todoTable.html:2
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/todoTable.html:2
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/todoTable.html:2
func StreamTodoTable(qw422016 *qt422016.Writer, todos []db.GetAllTodoRow) {
//line views/todoTable.html:2
	qw422016.N().S(`
<div id="todo-contents"
    class="flex flex-col overflow-x-auto sm:-mx-6 lg:-mx-8 min-w-full py-2 sm:px-6 lg:px-8 overflow-hidden">

    <div class="flex justify-center gap-20 p-4">
        <button hx-get="todo\new" hx-target="#todo-contents" class="btn btn-accent">
            Create new Todo
        </button>
    </div>

    <h1 class="self-center font-bold pt-7">Todo List</h1>

    <table class="min-w-full text-left text-sm font-light">
        <thead class="border-b font-medium dark:border-neutral-500">
            <tr>
                <th scope="col" class="px-6 py-4">ID</th>
                <th scope="col" class="px-6 py-4">Description</th>
                <th scope="col" class="px-6 py-4">Status</th>
                <th scope="col" class="px-6 py-4">Created On</th>
            </tr>
        </thead>
        <tbody>
            `)
//line views/todoTable.html:24
	for _, todo := range todos {
//line views/todoTable.html:24
		qw422016.N().S(`
            <tr hx-get="todo`)
//line views/todoTable.html:25
		qw422016.E().V(todo.ID)
//line views/todoTable.html:25
		qw422016.N().S(`" hx-target="#todo-contents"
                class="border-b transition duration-300 ease-in-out hover:bg-neutral-100 dark:border-neutral-500 dark:hover:bg-neutral-200">
                <td class="whitespace-nowrap px-6 py-4">`)
//line views/todoTable.html:27
		qw422016.E().V(todo.ID)
//line views/todoTable.html:27
		qw422016.N().S(`</td>
                <td class="whitespace-nowrap px-6 py-4">`)
//line views/todoTable.html:28
		qw422016.E().V(todo.Description)
//line views/todoTable.html:28
		qw422016.N().S(`</td>
                <td class="whitespace-nowrap px-6 py-4">`)
//line views/todoTable.html:29
		qw422016.E().V(todo.Status)
//line views/todoTable.html:29
		qw422016.N().S(`</td>
                <td class="whitespace-nowrap px-6 py-4">`)
//line views/todoTable.html:30
		qw422016.E().V(todo.CreatedOn)
//line views/todoTable.html:30
		qw422016.N().S(`</td>
            </tr>
            `)
//line views/todoTable.html:32
	}
//line views/todoTable.html:32
	qw422016.N().S(`
        </tbody>
    </table>
</div>
`)
//line views/todoTable.html:36
}

//line views/todoTable.html:36
func WriteTodoTable(qq422016 qtio422016.Writer, todos []db.GetAllTodoRow) {
//line views/todoTable.html:36
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/todoTable.html:36
	StreamTodoTable(qw422016, todos)
//line views/todoTable.html:36
	qt422016.ReleaseWriter(qw422016)
//line views/todoTable.html:36
}

//line views/todoTable.html:36
func TodoTable(todos []db.GetAllTodoRow) string {
//line views/todoTable.html:36
	qb422016 := qt422016.AcquireByteBuffer()
//line views/todoTable.html:36
	WriteTodoTable(qb422016, todos)
//line views/todoTable.html:36
	qs422016 := string(qb422016.B)
//line views/todoTable.html:36
	qt422016.ReleaseByteBuffer(qb422016)
//line views/todoTable.html:36
	return qs422016
//line views/todoTable.html:36
}
